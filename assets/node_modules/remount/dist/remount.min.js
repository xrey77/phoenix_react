import*as t from"react";import*as e from"react-dom/client";var n=Object.freeze({__proto__:null,name:"CustomElements",defineElement:function(t,e,n){const{onUpdate:o,onUnmount:r,onMount:u}=n;!function(){if(window.HTMLElement&&window.HTMLElement._babelES5Adapter||void 0===window.Reflect||void 0===window.customElements||window.customElements.hasOwnProperty("polyfillWrapFlushCallback"))return;const t=HTMLElement;window.HTMLElement=function(){return Reflect.construct(t,[],this.constructor)},HTMLElement.prototype=t.prototype,HTMLElement.prototype.constructor=HTMLElement,Object.setPrototypeOf(HTMLElement,t),HTMLElement._babelES5Adapter=!0}();const i=t.attributes||[];class s extends HTMLElement{static get observedAttributes(){return["props-json",...i]}connectedCallback(){this._mountPoint=function(t,e){const{shadow:n}=e;if(n&&t.attachShadow){const e=document.createElement("span");return t.attachShadow({mode:"open"}).appendChild(e),e}return t}(this,t),u(this,this._mountPoint)}disconnectedCallback(){this._mountPoint&&r(this,this._mountPoint)}attributeChangedCallback(){this._mountPoint&&o(this,this._mountPoint)}}t.quiet&&window.customElements.get(e)||window.customElements.define(e,s)},isSupported:function(){return!(!window.customElements||!window.customElements.define)},supportsShadow:function(){return!!(document&&document.body&&document.body.attachShadow)}});function o(t,e){for(let n=0,o=t.length;n<o;n++)e(t[n])}const r={};function u(t,e,n){t.nodeName.toLowerCase()===e?(n.onMount(t,t),function(t,e){const{onUpdate:n}=e;new MutationObserver((t=>{o(t,(t=>{const e=t.target;i(e)&&n(e,e)}))})).observe(t,{attributes:!0})}(t,n),function(t,e){const{onUnmount:n}=e,r=t.parentNode;if(!r)return;const u=new MutationObserver((e=>{o(e,(e=>{o(e.removedNodes,(e=>{t===e&&i(t)&&(u.disconnect(r),n(t,t))}))}))}));u.observe(r,{childList:!0,subtree:!0})}(t,n)):t.children&&t.children.length&&o(t.children,(t=>{i(t)&&u(t,e,n)}))}function i(t){return!!t}var s=Object.freeze({__proto__:null,name:"MutationObserver",observers:r,isSupported:function(){return"MutationObserver"in window},defineElement:function(t,e,n){if(!function(t){return!(-1===t.indexOf("-")||!t.match(/^[a-z][a-z0-9-]*$/))}(e=e.toLowerCase())){if(t.quiet)return;throw new Error(`Remount: "${e}" is not a valid custom element elName`)}if(r[e]){if(t.quiet)return;throw new Error(`Remount: "${e}" is already registered`)}const s=new MutationObserver((t=>{o(t,(t=>{o(t.addedNodes,(t=>{i(t)&&u(t,e,n)}))}))}));function c(){o(document.getElementsByTagName(e),(t=>u(t,e,n)))}s.observe(document.body,{childList:!0,subtree:!0}),r[e]=s,"complete"===document.readyState||"interactive"===document.readyState?c():window.addEventListener("DOMContentLoaded",c)},supportsShadow:function(){return!1}});let c;function a(){if(c)return c;const t=[n,s].find((t=>!!t.isSupported()));return t||console.warn("Remount: This browser doesn't support the MutationObserver API or the Custom Elements API. Including polyfills might fix this. Remount elements will not work. https://github.com/rstacruz/remount"),c=t,t}function d(t,e){const n=a();n&&Object.keys(t).forEach((o=>{const r=Object.assign({},e,function(t){if(e=t,"object"==typeof e&&e.component)return t;var e;return{component:t}}(t[o])),u=r.adapter;if(!u)throw new Error("No suitable adapter found");n.defineElement(r,o,{onMount(t,e){const n=m(t,r.attributes);r.shadow&&r.retarget?u.mount(r,e,n,t):u.mount(r,e,n,null)},onUpdate(t,e){const n=m(t,r.attributes);u.update(r,e,n,null)},onUnmount(t,e){u.unmount(r,e)}})}))}function m(t,e){const n=t.getAttribute("props-json");if(n)return JSON.parse(n);return(e||[]).reduce(((e,n)=>(e[n]=t.getAttribute(n),e)),{})}const l=new Map;var f=Object.freeze({__proto__:null,mount:function(n,o,r,u){const i=t.createElement(n.component,r),s=e.createRoot(o);l.set(o,s),s.render(i)},update:function(e,n,o,r){const u=t.createElement(e.component,o),i=l.get(n);i&&i.render(u)},unmount:function(t,e){const n=l.get(e);n&&(n.unmount(),l.delete(e))}});function p(t={},e={}){return d(t,{adapter:f,...e})}export{p as define,a as getStrategy};
